<script>
  import { onMount } from 'svelte';
  import Swal from 'sweetalert2';

  let crystals = 0;
  let gems = 0;
  let curent_tool = 0;
  let clickPower = 1;
  let crystalsPerSecond = 0;

  let crystals_error = "Fonds insuffisants pour acheter cet outil de minage !";

//   function saveData() {
//     const dataToSave = {
//       crystals,
//       clickPower,
//       crystalsPerSecond,
//       toolList
//     };

//     // Convertissez les données en JSON et enregistrez-les dans le stockage local
//     localStorage.setItem('astralite_tycoon_data', JSON.stringify(dataToSave));
//   }

//   // Ajoutez cette fonction dans votre script
//   function loadData() {
//     const savedData = localStorage.getItem('astralite_tycoon_data');

//     if (savedData) {
//       const parsedData = JSON.parse(savedData);

//       // Mettez à jour les variables avec les données chargées
//       crystals = parsedData.crystals;
//       clickPower = parsedData.clickPower;
//       crystalsPerSecond = parsedData.crystalsPerSecond;
//       toolList = parsedData.toolList;
//     }
//   }

//   // Appelez loadData dans onMount
//   onMount(() => {
//     loadData();
//   });



//   let miningTools = [
//     { name: "Pioche", pickaxe: true, cost: 10, power: 1, image: "pioche.png" },
//     { name: "Perceuse", cost: 100, power: 2, image: "perceuse.png" },
//     { name: "Marteau piqueur", cost: 500, power: 5, image: "marteau_piqueur.png" },
//     { name: "Foreuse", cost: 1000, power: 10, image: "foreuse.png" }
//   ];

//   let toolList = [...miningTools]; // Copie initiale des outils

//   function buyMiningTool(tool) {
//     if (tool.pickaxe) {
//       if (crystals >= tool.cost) {
//         crystals -= tool.cost;
//         clickPower++;
//         tool.cost = Math.floor(tool.cost * 1.5);
//         toolList = [...toolList]; // Actualiser la liste des outils pour déclencher la mise à jour de la vue
//         saveData();
//       } else {
//         showError(crystals_error);
//       }
//     } else {
//       if (crystals >= tool.cost) {
//         crystals -= tool.cost;
//         crystalsPerSecond += tool.power;
//         tool.cost = Math.floor(tool.cost * 1.5);
//         toolList = [...toolList]; // Actualiser la liste des outils pour déclencher la mise à jour de la vue
//         saveData();
//       } else {
//         showError(crystals_error);
//       }
//     }
//   }

//   function mineAstralite() {
//     crystals += clickPower;
//     saveData();
//   }

//   function showError(message) {
//     Swal.fire({
//       icon: 'error',
//       title: 'Erreur',
//       text: message,
//       confirmButtonColor: '#35b850',
//     });
//   }

//   function handleTouchStart(tool) {
//     if (crystals >= tool.cost) {
//       tool.isTouched = true;
//     }
//   }

//   function handleTouchEnd(tool) {
//       tool.isTouched = false;
//   }

//   // Utiliser onMount pour lancer la génération automatique de revenus après le rendu initial
//   onMount(() => {
//     setInterval(() => {
//       crystals += crystalsPerSecond;
//       saveData();
//     }, 1000); // Générer des cristaux toutes les secondes
//   });
// </script>

// <main>
//   <h1>Astralite Tycoon</h1>

//   <div class="astralite_counter">
//     <img src="favicon.ico" alt="astralite_icon">
//     <p class="crystals_count">{crystals}</p>
//   </div>
  
//   <div>
//     <div class="stats">
//       <p>Cristaux par clic : {clickPower}</p>
//       <p>Cristaux par seconde : {crystalsPerSecond}</p>
//     </div>

//     <div class="minage_astralite">
//       <button on:click={mineAstralite}>
//         <img src="android-chrome-512x512.png" alt="Mining Icon">
//         <p>Obtenir des cristaux d'Astralite par clic</p>
//       </button>
//     </div>
    
//     <div class="market">
//       <h2>Marcher des outils</h2>
//       {#each toolList as tool (tool.name)}
//       <button
//         class:affordable={crystals >= tool.cost}
//         on:click={() => buyMiningTool(tool)}
//         on:touchstart={() => handleTouchStart(tool)}
//         on:touchend={() => handleTouchEnd(tool)}
//       >
//         <img src={`./${tool.image}`} alt={tool.name} style="max-width: 100px; max-height: 100px;">
//         <p>{tool.name} ({tool.cost} $) - Puissance : {tool.power}</p>
//       </button>
//       {/each}
//     </div>
// </main>


<main>
  <nav class="top_menu">
    <ul>
      <li><img src="money.png" alt="money">{crystals}</li>
      <li><img src="gems.png" alt="gems">{gesm}</li>
      <li><img src="dustpan.png" alt="curent_tool">{curent_tool}</li>
      <li><a href="real_shop.svelte"><img src="shopping_basket.png" alt="shopping_basket"></a></li>
    </ul>
  </nav>

  <nav class="bottom_menu">
    <ul>
      <li><a href="shop.svelte"></a></li>
      <li><a href="worker.svelte"></a></li>
      <li><a href="world.svelte"></a></li>
    </ul>
  </nav>
</main>